description: Pipeline for parsing NetSpyGlass log messages
processors:
- set:
    field: event.ingested
    value: '{{_ingest.timestamp}}'
- grok:
    field: message
    trace_match: true
    pattern_definitions:
      LOG_THREAD: '\S[^\[]+\S'
    patterns:
    - (?m)%{TIMESTAMP_ISO8601:netspyglass.log.timestamp}%{SPACE}%{LOGLEVEL:log.level}%{SPACE}%{LOG_THREAD:netspyglass.log.thread}%{SPACE}\[%{SPACE}%{NOTSPACE:netspyglass.log.class}%{SPACE}\]:%{SPACE}%{GREEDYDATA:message}
- grok:
    field: log.file.path
    pattern_definitions:
      FILE_BASENAME: '.+'
    patterns:
    - ^.*/%{FILE_BASENAME:netspyglass.log.name}\.log
- rename:
    field: '@timestamp'
    target_field: event.created
- date:
    if: ctx.event.timezone == null
    field: netspyglass.log.timestamp
    target_field: '@timestamp'
    formats:
    - yyyy-MM-dd HH:mm:ss,SSS
    on_failure:
    - append:
        field: error.message
        value: '{{ _ingest.on_failure_message }}'
- date:
    if: ctx.event.timezone != null
    field: netspyglass.log.timestamp
    target_field: '@timestamp'
    formats:
    - yyyy-MM-dd HH:mm:ss,SSS
    timezone: '{{ event.timezone }}'
    on_failure:
    - append:
        field: error.message
        value: '{{ _ingest.on_failure_message }}'
- remove:
    field: netspyglass.log.timestamp
- set:
    field: event.kind
    value: event
on_failure:
- set:
    field: error.log
    value: '{{ _ingest.on_failure_message }}'
